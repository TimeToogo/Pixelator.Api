using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using WIDA.Storage;
using WIDA.Utes;
using System.Windows.Forms;

namespace WIDA.Tasks.Conditions
{
    public class Condition : Definition
    {
        private object ConditionInstance = null;
        public delegate bool Del();
        private Del IsConditionMet = null;


        public Condition(string Name, string GroupName, string Description, Source Source, bool NeedsParams, Source FormSource, object[] Args = null)
        : base(Name, GroupName, Description, Source, NeedsParams, FormSource, Args)
        {

        }

        public Condition(XmlElement Element)
        : base(Element)
        {

        }

        public Condition Clone()
        {
            return new Condition(this.ToXML());
        }

        public override void AssignTask(Task Task)
        {
            //Create the instance for the condition
            object[] Constructors = new object[1];
            Constructors[1] = this.Args;
            this.ConditionInstance = Compiler.SourceToInstance(this.Source.CodeList().ToArray(), this.Source.ReferencedAssemblies.ToArray(), Conf.ConditionCriticals.Namespace, Conf.ConditionCriticals.Class, Constructors);
            this.IsConditionMet = (Del)Delegate.CreateDelegate(typeof(Del), this.ConditionInstance.GetType().GetMethod(Conf.ConditionCriticals.Methods.First()));
            base.AssignTask(Task);
        }

        public bool IsMet()
        {
            //Handle any error generated by executing the code
            try
            {
                return this.IsConditionMet();
            }
            catch
            {
                return false;
            }
        }

        public override void Dispose()
        {
            //Handle any error generated by executing the code
            try
            {
                this.ConditionInstance.GetType().GetMethod("Dispose").Invoke(this.ConditionInstance, null);
            }
            catch
            { }
            this.ConditionInstance = null;
            base.Dispose();
        }
    }
}
